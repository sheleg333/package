# GH actions.
name: Wheel-Linux-Nightly

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * 3,6' # 1 AM UTC

permissions:
  contents: write

jobs:
  Build:
    strategy:
      matrix:
        pkg: ['mlc-ai-nightly']
        mlc-chat-pkg: ['mlc-chat-nightly']
        # matrix of build configs
        config:
          # - gpu: 'none'
          - gpu: 'cuda-12.1'
          - gpu: 'cuda-12.1'

    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Reclaim disk space
      run: |
        df -h
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /usr/local/.ghcup
        df -h

    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Setup script env
      run: |
        rm -rf conda
        ln -s 3rdparty/tlcpack/conda conda
    - name: Checkout source
      run: |
        git clone https://github.com/mlc-ai/relax tvm --recursive
        git clone https://github.com/mlc-ai/mlc-llm mlc-llm --recursive
    - name: Sync Package
      run: |
        python scripts/sync_package.py --gpu ${{ matrix.config.gpu }} --package tvm --package-name ${{ matrix.pkg }} --revision origin/mlc --skip-checkout --skip-conda
        python scripts/sync_package.py --gpu ${{ matrix.config.gpu }} --package mlc-llm --package-name ${{ matrix.mlc-chat-pkg }} --revision origin/main --skip-checkout --skip-conda

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build TVM Unity 1
      if: ${{ matrix.config.gpu == 'cuda-12.1' }}
      env:
        IMAGE: 'ghcr.io/${{ github.actor }}/package-cu121:latest'
        GPU: 'cuda-12.1'
      run: |
        docker/bash.sh --no-gpu $IMAGE ./scripts/build_mlc_ai_wheel_manylinux.sh --gpu $GPU

    - name: Build TVM Unity 2
      if: ${{ matrix.config.gpu == 'cuda-12.2' }}
      env:
        IMAGE: 'ghcr.io/${{ github.actor }}/package-cu122:latest'
        GPU: 'cuda-12.2'
      run: |
        docker/bash.sh --no-gpu $IMAGE ./scripts/build_mlc_ai_wheel_manylinux.sh --gpu $GPU

    - name: Build MLC-Chat 1
      if: ${{ matrix.config.gpu == 'cuda-12.1' }}
      env:
        IMAGE: 'ghcr.io/${{ github.actor }}/package-cu121:latest'
        GPU: ${{ matrix.config.gpu }}
      run: |
        docker/bash.sh --no-gpu $IMAGE ./scripts/build_mlc_chat_wheel_manylinux.sh --gpu $GPU

    - name: Build MLC-Chat 2
      if: ${{ matrix.config.gpu == 'cuda-12.2' }}
      env:
        IMAGE: '$ghcr.io/${{ github.actor }}/package-cu122:latest'
        GPU: ${{ matrix.config.gpu }}
      run: |
        docker/bash.sh --no-gpu $IMAGE ./scripts/build_mlc_chat_wheel_manylinux.sh --gpu $GPU

    - name: Wheel-Deploy
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      with:
        files: |
          tvm/python/repaired_wheels/*.whl
          mlc-llm/python/repaired_wheels/*.whl
        tag_name: v0.9a.dev0
        prerelease: true
